# y1
# View(y1)
p1 <- ggplot(y1, aes(V1, V2)) +
geom_raster(aes(fill=V3)) +
labs(x="L1",
y="L2",
title = "eq1")
# ggplotly(p1)
y2.new <- matrix(NA, nrow = size^2, ncol = 3)
i = 1
for (j in seq(1,size,1)){
for(k in seq(1,size,1)){
y2.new[i,1] <- l1[j]
y2.new[i,2] <- l2[k]
aux <- t.max*(k1+1)*l2[k]*(l1[j] + t.max*l2[k])^k1 - (l1[j] + t.max*l2[k])^(k1+1) + (l1[j])^(k+1) - (k1+1)*t.av*(l2[k]^2)*(k1^k1)
aux[is.nan(aux)] <- 100
if (abs(aux) > 10){
y2.new[i,3] <- NA
} else {
y2.new[i,3] <-t.max*(k1+1)*l2[k]*(l1[j] + t.max*l2[k])^k1 - (l1[j] + t.max*l2[k])^(k1+1) + (l1[j])^(k+1) - (k1+1)*t.av*(l2[k]^2)*(k1^k1)
}
i = i+1
}
}
# View(y2.new)
y2 <- as.data.frame(y2.new)
# y1
# View(y1)
p2 <- ggplot(y2, aes(V1, V2)) +
geom_raster(aes(fill=V3)) +
labs(x="L1",
y="L2",
title = "eq2")
# ggplotly(p2)
# aux3 <- abs(y1$V3)+ abs(y2$V3)
aux3 <- y1$V3+ y2$V3
y3 <- cbind(y1,aux3)
p3 <- ggplot(y3, aes(V1, V2)) +
geom_raster(aes(fill=aux3)) +
labs(x="L1",
y="L2",
title = "eq2")
ggplotly(p3)
L1 <- -5.05
L2 <- 48.05
L1 <- -5.05
L2 <- 48.05
Eq1 <- (L1 + t.max*L2)^k1 - (L1)^k1 - (L2)*k1^k1
Eq2 <- t.max*(k1+1)*L2*(L1 + t.max*L2)^k1 - (L1 + t.max*L2)^(k1+1) + (L1)^(k+1) - (k1+1)*t.av*(L2^2)*(k1^k1)
Eq1
Eq2
L2 <- 48.046
Eq1 <- (L1 + t.max*L2)^k1 - (L1)^k1 - (L2)*k1^k1
Eq2 <- t.max*(k1+1)*L2*(L1 + t.max*L2)^k1 - (L1 + t.max*L2)^(k1+1) + (L1)^(k+1) - (k1+1)*t.av*(L2^2)*(k1^k1)
Eq1
Eq2
persp3D(y1)
y1
persp3D(x = y1$V1,y = y1$V2, z = y1$V3)
persp3D
writeLines(y1,'eq1.txt')
writeLines(y2,'eq2.txt')
write.table(y1,'eq1.txt')
write.table(y2,'eq2.txt')
t.av <- 0.080
t.max <- 0.088
l1 <- seq(-50,50,0.1)
l2 <- seq(-50,50,0.1)
size <- length(l1)
y1.new <- matrix(NA, nrow = size^2, ncol = 3)
i = 1
for (j in seq(1,size,1)){
for(k in seq(1,size,1)){
y1.new[i,1] <- l1[j]
y1.new[i,2] <- l2[k]
aux <- (l1[j] + t.max*l2[k])^k1 - (l1[j])^k1 - (l2[k])*k1^k1
aux[is.nan(aux)] <- 100
if (abs(aux) > 10){
y1.new[i,3] <- NA
} else {
y1.new[i,3] <- (l1[j] + t.max*l2[k])^k1 - (l1[j])^k1 - (l2[k])*k1^k1
}
i = i+1
}
}
y1 <- as.data.frame(y1.new)
# y1
# View(y1)
p1 <- ggplot(y1, aes(V1, V2)) +
geom_raster(aes(fill=V3)) +
labs(x="L1",
y="L2",
title = "eq1")
y2.new <- matrix(NA, nrow = size^2, ncol = 3)
i = 1
for (j in seq(1,size,1)){
for(k in seq(1,size,1)){
y2.new[i,1] <- l1[j]
y2.new[i,2] <- l2[k]
aux <- t.max*(k1+1)*l2[k]*(l1[j] + t.max*l2[k])^k1 - (l1[j] + t.max*l2[k])^(k1+1) + (l1[j])^(k+1) - (k1+1)*t.av*(l2[k]^2)*(k1^k1)
aux[is.nan(aux)] <- 100
if (abs(aux) > 10){
y2.new[i,3] <- NA
} else {
y2.new[i,3] <-t.max*(k1+1)*l2[k]*(l1[j] + t.max*l2[k])^k1 - (l1[j] + t.max*l2[k])^(k1+1) + (l1[j])^(k+1) - (k1+1)*t.av*(l2[k]^2)*(k1^k1)
}
i = i+1
}
}
# View(y2.new)
y2 <- as.data.frame(y2.new)
# y1
# View(y1)
p2 <- ggplot(y2, aes(V1, V2)) +
geom_raster(aes(fill=V3)) +
labs(x="L1",
y="L2",
title = "eq2")
write.table(y1,'eq1.txt')
write.table(y2,'eq2.txt')
L2 <- 0
Eq1 <- (L1 + t.max*L2)^k1 - (L1)^k1 - (L2)*k1^k1
Eq2 <- t.max*(k1+1)*L2*(L1 + t.max*L2)^k1 - (L1 + t.max*L2)^(k1+1) + (L1)^(k+1) - (k1+1)*t.av*(L2^2)*(k1^k1)
Eq1
Eq2
L1 <- 1
L2 <- 0
Eq1 <- (L1 + t.max*L2)^k1 - (L1)^k1 - (L2)*k1^k1
Eq2 <- t.max*(k1+1)*L2*(L1 + t.max*L2)^k1 - (L1 + t.max*L2)^(k1+1) + (L1)^(k+1) - (k1+1)*t.av*(L2^2)*(k1^k1)
Eq1
Eq2
L1 <- -1
L2 <- 0
Eq1 <- (L1 + t.max*L2)^k1 - (L1)^k1 - (L2)*k1^k1
Eq2 <- t.max*(k1+1)*L2*(L1 + t.max*L2)^k1 - (L1 + t.max*L2)^(k1+1) + (L1)^(k+1) - (k1+1)*t.av*(L2^2)*(k1^k1)
Eq1
Eq2
exp(80)
exp(800)
exp(500)
exp(700)
exp(800)
exp(750)
exp(740
)
exp(720)
x <- 1e-10
x
f <- 10^0.1
f
f <- 10^(1/12)
f
source('~/.active-rstudio-document', echo=TRUE)
f
x_max <- 1e+10
x <- 1e-10
f <- 10^(1/32)
x_max <- 1e+10
i=1
while (x <= x_max){
sol$x[i] <- x
sol$ex[i] <- exp(x)
sol$x_exp[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
head(sol)
i=1
x <- 1e-10
f <- 10^(1/32)
x_max <- 1e+10
i=1
while (x <= x_max){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$x_exp[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
class(sol)
sol <-as.matrix(sol)
sol[["x_exp"]]
sol
xi <- rep(NA, 700)
xi
xi <- rep(NA, 700)
ex <- rep(NA, 700)
x_exp <- rep(NA, 700)
sol <- cbind(xi, ex, x_exp)
sol
i=1
while (x <= x_max){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$x_exp[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
View(sol)
while (x < x_max){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$x_exp[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
exp(3)
exp(1000)
exp(500)
exp(600)
while (x < x_max+1){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$x_exp[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
x <- 1e-10
f <- 10^(1/32)
x_max <- 1e+10
x_max
x
x <- 10^-10
x
x_max <- 10^10
xi <- rep(NA, 700)
ex <- rep(NA, 700)
x_exp <- rep(NA, 700)
sol <- cbind(xi, ex, x_exp)
i=1
while (x < x_max+1){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$x_exp[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
sol <- cbind(xi, ex, x_exp)
View(sol)
sol <- cbind(xi, ex, x_exp)
View(sol)
sol$xi[1] <- 1
sol[1][1] <- 1
sol
x <- 10^-10
f <- 10^(1/32)
x_max <- 10^10
xi <- rep(NA, 700)
ex <- rep(NA, 700)
x_exp <- rep(NA, 700)
sol <- cbind(xi, ex, x_exp)
i=1
while (x < x_max+1){
sol[i][1] <- x
sol[i][2] <- exp(x)
sol[i][3] <- log(sol[i][2])
i <- i+1
x <- x*f
}
View(sol)
x <- 10^-5
f <- 10^(1/32)
x_max <- 10^5
xi <- rep(NA, 700)
ex <- rep(NA, 700)
x_exp <- rep(NA, 700)
sol <- cbind(xi, ex, x_exp)
i=1
while (x < x_max+1){
sol[i][1] <- x
sol[i][2] <- exp(x)
sol[i][3] <- log(sol[i][2])
i <- i+1
x <- x*f
}
View(sol)
warnings()
View(sol)
x <- 10^-5
f <- 10^(1/32)
x_max <- 10^5
# xi <- rep(NA, 700)
# ex <- rep(NA, 700)
# x_exp <- rep(NA, 700)
#
# sol <- cbind(xi, ex, x_exp)
i=1
while (x < x_max+1){
sol[i][1] <- x
sol[i][2] <- exp(x)
sol[i][3] <- log(sol[i][2])
i <- i+1
x <- x*f
}
View(sol)
View(sol)
x <- 10^-5
f <- 10^(1/32)
x_max <- 10^5
i=1
while (x < x_max+1){
sol[i][1] <- x
sol[i][2] <- exp(x)
sol[i][3] <- log(sol[i][2])
i <- i+1
x <- x*f
}
View(sol)
data.frame(sol)
sol <- data.frame()
i=1
while (x < x_max+1){
sol[i][1] <- x
sol[i][2] <- exp(x)
sol[i][3] <- log(sol[i][2])
i <- i+1
x <- x*f
}
View(sol)
x <- 10^-10
f <- 10^(1/32)
x_max <- 10^10
xi <- rep(NA, 641)
ex <- rep(NA, 641)
x_exp <- rep(NA, 641)
sol <- cbind(xi, ex, x_exp)
i=1
while (x < x_max+1){
sol[i][1] <- x
sol[i][2] <- exp(x)
sol[i][3] <- log(sol[i][2])
i <- i+1
x <- x*f
}
View(sol)
warnings()
x <- 10^-10
f <- 10^(1/32)
x_max <- 10^10
i=1
while (x < x_max+1){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$xe[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
x <- 10^-10
f <- 10^(1/32)
x_max <- 10^10
i=1
while (x < x_max+1){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$xe[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
x <- 10^-10
f <- 10^(1/32)
x_max <- 10^10
xi <- rep(NA, 641)
ex <- rep(NA, 641)
x_exp <- rep(NA, 641)
sol <- cbind(xi, ex, x_exp)
i=1
while (x < x_max+1){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$xe[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
sol <- as.matrix(c.bind(xi, ex, x_exp))
sol <- as.matrix(cbind(xi, ex, x_exp))
sol
sol <- as.matrix(cbind(xi, ex, x_exp))
i=1
while (x < x_max+1){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$xe[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
x <- 10^-10
f <- 10^(1/32)
x_max <- 10^10
xi <- rep(NA, 641)
ex <- rep(NA, 641)
xe <- rep(NA, 641)
sol <- as.matrix(cbind(xi, ex, xe))
i=1
while (x < x_max+1){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$xe[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
sol <- as.data.frame(cbind(xi, ex, xe))
x <- 10^-10
f <- 10^(1/32)
x_max <- 10^10
xi <- rep(NA, 641)
ex <- rep(NA, 641)
xe <- rep(NA, 641)
sol <- as.data.frame(cbind(xi, ex, xe))
i=1
while (x < x_max+1){
sol$xi[i] <- x
sol$ex[i] <- exp(x)
sol$xe[i] <- log(sol$ex[i])
i <- i+1
x <- x*f
}
View(sol)
getwd()
read.delim('exponential_2.txt')
fortran<- read.delim('exponential_2.txt')
fortran
fortran <- fotran[, c(3,4,5)]
fortran
fortran<- read.delim('exponential_2.txt')
fortran <- fortran[, c(3,4,5)]
fortran
fortran<- as.data.frame(read.delim('exponential_2.txt'))
fortran <- fortran[, c(3,4,5)]
fortran <- fortran[1:450, 3:5]
fortran <- fortran[1:450, 2:4]
dimensions(fortran)
View(fortran)
fortran<- as.data.frame(read.delim('exponential_2.txt',sep = "\t" ))
fortran <- fortran[1:450, 2:4]
View(fortran)
fortran<- as.data.frame(read.delim('exponential_2.txt',sep = " " ))
fortran <- fortran[1:450, 2:4]
View(fortran)
fortran<- as.data.frame(read.delim('exponential_2.txt',sep = " " ))
View(fortran)
fortran<- as.data.frame(read.delim('exponential_2.txt',sep = "\t" ))
View(fortran)
fortran<- as.data.frame(read.delim('exponential_2.txt',sep = "\t", header = F ))
View(fortran)
plot(x = sol$ex, y = fortran$V2 )
sol
View(sol)
plot(x = sol$ex[1:450], y = fortran$V2 )
plot(x = sol$ex[1:412], y = fortran$V2[1:412] )
plot(x = sol$ex[1:412], y = fortran$V2[1:412], log = 'xy')
ex.f <- fortran$V2[1:412]
ex.r <- sol$ex[1:412]
ex.f <- fortran$V2[1:412]
diff <- abs(ex.r - ex.f)
diff
ex.r <- sol$ex[1:412]
ex.f <- fortran$V2[1:412]
x.x <- sol$xi[1:412]
diff <- abs(ex.r - ex.f)
plot(x = x.x, y = diff, log = 'xy')
plot(x = x.x, y = diff, log = 'y')
plot(x = x.x, y = diff, log = 'xy')
diff <- abs(ex.r - ex.f)/ex.r
plot(x = x.x, y = diff, log = 'xy')
plot(sol)
plot(x = x.x, y = diff, log = 'xy')
plot(x.x, ex.r)
plot(x.x, ex.r,log = 'xy')
points(x.x, ex.f,log = 'xy')
plot(x.x, ex.r,log = 'xy')
points(x.x, ex.f,log = 'xy')
plot(x.x, ex.r,log = 'xy')
points(x.x, ex.f)
plot(x.x, ex.r,log = 'xy')
points(x.x, ex.f)
plot(x.x, ex.r,log = 'xy')
points(x.x, ex.f, pch = 10 )
legend('topleft')
diff <- abs(ex.r - ex.f)/ex.r
plot(x = x.x, y = diff, log = 'xy')
plot(x = sol$ex[1:412], y = fortran$V2[1:412], log = 'xy')
diff <- abs(ex.r - ex.f)
plot(x = x.x, y = diff, log = 'xy')
line(x = c(1e-10,1e3), y = c(1,1))
plot(x = x.x, y = diff, log = 'xy')
line(x = c(1e-10,1e3), y = c(1,1))
plot(x = x.x, y = diff, log = 'xy')
plot(x = x.x, y = diff, log = 'xy')
lines(x = c(1e-10,1e3), y = c(1,1))
diff
x.x[345]
x.x[353]
x.x[354]
x.x[360]
x.x[370]
diff[370]
library(plotrix)
wd <- 'C:/Users/pedro/Documents/Fortran/ebgem_v02'
setwd(wd)
a <- as.matrix(read.delim('in1.txt'))
b<- a[a[,1]>0.001]
write.table(b, 'in11.txt', row.names = F, col.names = F)
max(b)
